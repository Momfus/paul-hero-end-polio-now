<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_estalactita_rota</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>7</depth>
  <persistent>0</persistent>
  <parentName>parent_danio</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicio de atributos y distancia con suelo
{

    chaman_invocadas = false; // Para saber si se ha invocado en el jefe final

    activado = true; // Para indicar si hace o no sus acciones (que se desactivan cuando el jugador muere por ejemplo)    
    choque = false; // Señala si ha colisionado o no con un objeto sólido (se usa para realizar la animación cuando se rompe)
    
    x_centro = x + 8;
    caer = false; // Indica si ya detectó o no al jugador.
    
    // Para saber donde si hay un suelo proximo, se asigna a "suelo_y" el resultado de la función "abajo_plataforma_y".
    suelo_y = abajo_plataforma_y(x_centro, y + sprite_height, 8, y + 128);

    // Se asimila la line de tiempo cuando esta por caerse
    timeline_index = time_estalactica_porcaer;
    
    image_speed = 0;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Se cae
{

    // Se detiene la animación y vuelve el objeto a su posición central.
    timeline_running = false;
    x = xstart;
    
    // Velocidad y gravedad asignada a la caida
    vspeed = 2;
    gravity = 0.6

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Detección de jugador.
{

    if( caer == false and activado == true and instance_exists(ob_jug) ){ 
    
        //Se guarda la coordenada "Y" del jugador para saber si se encuentra en el rango de este objeto en el evento step.
        var jug_y = ob_jug.y;
        
        // Si el jugador se encuentra en el rango del objeto y justo paqsa por debajo, se activa y, luego de animarse, se cae.
        if ( ( jug_y &gt; y and jug_y &lt; suelo_y ) and  collision_line( x_centro, y, x_centro, suelo_y, ob_jug, false, false) ) {
    
            caer = true;
            alarm[0] = 10; // Alarme que inidca que el objeto caiga.
            
            timeline_running = true; // Se activa la animación.
        
            //[Sonido] Cuando esta por caer.
            audio_sound_pitch( sn_estalactita_caer, 0.8 + random( 0.6 ) );
            audio_play_sound( sn_estalactita_caer, 3, false );    
            
        }
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_caja_usando">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Se choca con la caja y luego desactiva
{

    // Este objeto se desactiva si colisiona con la caja mientras la usa el jugador y si este esta cayendo.
    if( caer == true ){
    
        image_speed = 0.25;
    
        vspeed = 0;
        gravity = 0;
        caer = false;
        activado = false;
        
        choque = true;
        
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_plat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Se choca con el suelo y luego desactiva
if( caer == true ){
  
    image_speed = 0.5; // Se anima el objeto y al terminar la animación se desactiva

    vspeed = 0;
    gravity = 0;
    caer = false;
    activado = false;
    
    choque = true;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Se hace invisible, desactiva y vuelve a su posicion original

visible = false;

image_speed = 0;

y = ystart;
choque = false;
            
mask_index = sp_estalactita;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dibujado de sprite
{

    if( choque == false ){ draw_sprite(sp_estalactita, 0, x, y); }
    else{ draw_sprite(sp_estalactita_rota, -1, x, y); }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
