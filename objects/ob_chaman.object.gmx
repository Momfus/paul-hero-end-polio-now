<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_chaman_invocar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicio Atributos.

image_speed = 0.2;

estado = 0; /*

                0 = Quieto
                1 = Invocando
                2 = Riendo
                3 = Enojado.

            */
            
     
// Se llama a la alarma que hace que se ria (cuando invoca o cambia el sprite luego se llama de nuevo)       
alarm[0] = 300 + irandom(150);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Risa / volver a la normalidad

if( estado == 0 ){

    estado = 2;
    alarm[0] = 45;
    
    // Sonido de risa.
    var risa = audio_play_sound( sn_jefe_risa, 20, false );
    audio_sound_pitch( risa, 1 + random(0.3) );
    audio_sound_gain( risa, volumen_musica + 0.2, 0 );
}    
else{

    estado = 0;
    alarm[0] = 300 + irandom(150);

}   
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manejo de sprite en estados

switch(estado){

    // Quieto
    case 0:{ draw_sprite( sp_chaman_invocar, 0, x, y ); break; }
    
    // Invocando
    case 1:{ draw_sprite( sp_chaman_invocar, -1, x, y ); break; }

    // Riendo
    case 2:{ 
    
        draw_sprite( sp_chaman_riendo, -1, x, y );
        draw_sprite( sp_chaman_jaja, -1, x - 64, y - 32 );
        
        break;
    
    }
    
    // Enojado
    case 3:{ draw_sprite( sp_chaman_enojado, -1, x, y ); break; }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,64</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
