<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_caja</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>ob_plat_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Declaración de atributos y variables
{

    vsp = 0; // Variable de velocidad vertical. 
    
    plat_movil_id = 0 ; // Guarda el ID de la plataforma móvil sobre la que está.
    
    usando = false; // Señala si el jugador esta sosteniendo la caja o no.
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gravedad y movimiento general.
{

    /* Si la caja no se está usado, se aplica la gravedad y el movimiento vertical necesario para las colisiones, caso contrario se cambia a
    una instancia del objeto "ob_caja_usando".*/
    if( usando == false ){
        
        // El movimiento y las colisiones verticales se tienen en cuenta si la caja no está sobre una plataforma móvil.
        if ( plat_movil_id == 0 ){
        
            /* Se verifica si hay un suelo por debajo en la dirección que se dirige, si es así se detiene y se pega justo encima....caso contrario, aumentá
            la velocidad vertical con el factor de gravedad "grav".*/
            if( place_meeting( x, y + vsp + 2, parent_plat ) ){
                
                /* Se controla que no esté colisionando con una "cloud platform" (ya que puede pasar cuando el jugador lo deja cuando la plataforma móvil 
                está pasando por ejemplo), caso contrario se aplica la gravedad a la velocidad vertical.*/
                if  ( !place_meeting( x, y, parent_plat_cloud ) ){
                
                    // Si la velocida vertical no es cero, se setea a ese valor y se coloca justo encima del suelo.
                    if( vsp != 0 ){ 
                        
                        vsp = 0;
                        
                        while ( !place_meeting( x, y + 0.5, parent_plat ) ){ y += 0.5; } 
                            
                    }
                
                }
                else{
                
                    // Se verifica si por debajo hay un suelo sólido...en ese caso no se aplica el efecto de gravedad.
                    if( place_meeting( x, y + vsp + 2, ob_plat_wall ) ){
                    
                        // Si la velocida vertical no es cero, se setea a ese valor y se coloca justo encima del suelo.
                        if( vsp != 0 ){ 
                        
                            vsp = 0;
                        
                            while ( !place_meeting( x, y + 0.5, ob_plat_wall ) ){ y += 0.5; } 
                            
                        }
                    
                    }
                    else{
                    
                        if( vsp &lt; 12 ){ vsp += grav; }
                    }
                
                }
                
            }
            else{
                
                if( vsp &lt; 12 ){ vsp += grav; }
                
            }
                
            // Se mueve su eje "y" según la velocidad vertical que tuviera.
            y += vsp;
        
        }
        
    }
    else{
    
        /* Si la caja estaba siendo movida por una plataforma móvil, se setea en cero donde la plataforma guarda el ID de la caja (esto evita que la caja 
        siga moviéndose al reaparecer cuando se suelta) */
        if( plat_movil_id != 0 ){
        
            plat_movil_id.move_caja = 0;
        
        }
    
        /* Se transforma a "ob_caja_usando" para que la máscara de colisión no sea la misma y para no tener el mismo "parent" (haciando que se no se detecte
        como una pared. */
        instance_change(ob_caja_usando, true);
        
        
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sobre plataformas móviles
{

    /* Se verifica primero que la caja no este siendo usada por el jugador y que no esté sobre otra plataforma móvil, luego se verifica que la caja
    este cercana a una plataforma móvil y que lo tenga justo debajo, además que no haya un suelo justo debajo de la caja (se le da prioridad al suelo
    antes que la plataformas móviles). Finalmente se guarda el el ID de esa plataforma móvil y se verifica que la caja este por encima de la misma
    (y que el valor no sea nulo, esto evita problemas en html5), de cumplirse todo lo anterior se guarda el ID de la caja en la plataforma móvil
    para que sea esta la encargada de moverlo correctamente...caso contrario, se sete la varaible "plat_movil_id" en cero.*/
    if ( usando == false ){
    
        /* Si no estaba sobre una plataforma móvil el código sigue comprobando otras condiciones...caso contrario, se controla si está su centro justo
        por encima de un suelo sólido, de ser así deja de seguir a la plataforma móvil a la que está. */
        if ( plat_movil_id == 0 ){
        
            if ( distance_to_object(parent_plat_movil) &lt; 16 ){
            
                if ( place_meeting( x, y + 4, parent_plat_movil ) ){
                
                    if not ( position_meeting( x + 16, y + 33, ob_plat_wall ) ){
                    
                        plat_movil_id = instance_place( x, y + 5, parent_plat_movil );
                        
                        // Se verifica que el jugador este por encima de la plataforma móvil.
                        if( plat_movil_id != noone and y + 31 &lt; plat_movil_id.y ){
                        
                            /* Se controla que tipo de plataforma es ( 1 == vertical, 0 = horizontal), si es vertical se verifican ciertas condiciones;
                            caso contrario simplemente hace que la caja siga a esa plataforma.*/
                            if ( plat_movil_id.tipo == 1 ){
                            
                                /* Si la plataforma móvil esta llendo hacia arriba comienza a ir con ella, sino se controla que si va hacia abajo que
                                la siga solo sí la caja esta en el aire (cuando su velocidad vertical no es cero).*/
                                if( plat_movil_id.vsp &lt; 0 ){
                                    
                                    with(plat_movil_id){ move_caja = other.id; }
                                    
                                    while( !place_meeting( x, y + 0.5, parent_plat_movil ) ){ y++; } // Se coloca la caja justo encima.
                                    vsp = 0; // Se setea la velocidad vertical de la caja en cero.
                                
                                }
                                else{
                                
                                    if( vsp != 0 ){
                                    
                                        with(plat_movil_id) { move_caja = other.id; }
                                        
                                        while( !place_meeting( x, y + 0.5, parent_plat_movil ) ){ y++; } // Se coloca la caja justo encima.
                                        vsp = 0; // Se setea la velocidad vertical de la caja en cero.
                                    
                                    }
                                    else{
                                    
                                        plat_movil_id = 0;
                                    
                                    }
                                
                                }
                            
                            }
                            else{
                            
                                with(plat_movil_id){ move_caja = other.id; } 
                                
                                while( !place_meeting( x, y + 0.5, parent_plat_movil ) ){ y++; } // Se coloca la caja justo encima.
                                vsp = 0; // Se setea la velocidad vertical de la caja en cero.
                                
                            }
                        
                        }
                        else{
                        
                            plat_movil_id = 0;
                        
                        }
                    
                    }
                    else{
                    
                        plat_movil_id = 0;
                    
                    }
                
                }
            
            }  
        
        }
        else{
        
            // Si está su centro justo por encima de un suelo sólido, de ser así deja de seguir a la plataforma móvil a la que está.
            if( position_meeting( x + 16, y + 34, ob_plat_wall ) ){
            
                with( plat_movil_id ){ move_caja = 0; }
                plat_movil_id = 0;
            
            }
        
        }
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_danio">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Muerte del jugador por romper caja.
if not( instance_exists( ob_jug_muerte ) ) {

    var tipo_danio = other.object_index;

    // Lo siguiente se realiza si el "parent_danio" que se colisiona no es una flecha o estalactita.
    if( tipo_danio != ob_flecha and tipo_danio != ob_estalactita){
    
        /* Se verifica si el objeto que se está colisionando no es del tipo "Pinche", en ese caso se realiza las acciones de muerte del jugador. Si el objeto llega a
        ser del tipo "pinche", debido a que esos objetos pueden estirarse, se debe estar colisionando un área en especifico alrededor del centro de la caja, de ser 
        así se realiza la accion de muerte.*/
        if( other.object_index != ob_pinches ){ with(ob_jug){ estado_muerte_jug( xstart, ystart ); } }
        else{
    
            var colision_pinche = collision_rectangle( x + 8, y + 8, x + 24, y + 24, ob_pinches, false, false );
            
            if( colision_pinche != noone ){ with(ob_jug){ estado_muerte_jug( xstart, ystart ); } }
    
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_plat_solido">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manejo de colisioens con objetos sólidos.
{

    // Lo siguiene sucede cuando esta sobre una plataforma móvil (dependiendo del tipo).
    if( plat_movil_id != 0 ){
    
        // Se verifica que tipo de plataforma móvil lo está moviendo.
        switch(plat_movil_id.tipo){
            
            // Horizontal
            case 0:{
            
                // Se verifica en que lado esta la pared con la que se colisiona la caja.
            
                // A la izquierda.
                if( x &gt; other.x ){
                
                    while( place_meeting( x, y, other ) ){ x++; }
                    
                
                }
                else{ // A la derecha.
                
                    while( place_meeting( x, y, other ) ){ x--; }
                
                }
            
                break;
                
            }
            
            
            // Vertical.
            case 1:{
             
                    // Se verifica si esta a la izquierda de la caja o a la derecha.
                            
                    // A la izquierda.
                    if( ( x + 16 ) &gt; other.x ){
                                
                        while( place_meeting( x, y, other ) ){ x++; }
                        
                                
                    }
                    else{ // A la derecha
                                
                        while( place_meeting( x, y, other ) ){ x--; }
                               
                        
                    }
            
                break;
            
                
            }
        
        }    
    
        
                 
        
    }

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_plat_movil">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Correción al colisionar.
{

    if( plat_movil_id == other.id ) {
    
        if( place_meeting(x,y,other) ){
        
            while(place_meeting(x,y,other) ){ y -= 0.5; }
        
        }
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>14,14</point>
  </PhysicsShapePoints>
</object>
