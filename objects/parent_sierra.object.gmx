<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>parent_danio</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicio de atributos.
{

    //Se guarda las coordenas de origen para reaparecer en ese lugar luego que el jugador muera.
    xo = x;
    yo = y;

    vel = 0; // Velocidad por pixeles que se mueve horizontalmente / verticalmente.
    
    // Se iguala a la velocidad inicial que tiene y se llama a una alarma que le asigna la velocidad asignada en la código de creación de instancia.
    ini_vel = vel;
    alarm[0] = 1; 
    
    activado = true; // Señala si puede o no moverse (se detiene cuando el personaje muere por ejemplo).
    
    image_speed = 0.5; // Velocidad estándar de la animación.
     
    /* Lo siguiente es para obtener la distancia que hay entre el borde del sprite y el de la máscara de colisión, es usado para la correcta detección de 
    colisión con los muros (debido a que la máscara de los enemigos es pequeña). */
    
    // Depende de que tipo de objeto herede de este, es como se realiza el padding (sierra horizontal o vertical):
    if( object_get_name(object_index) == "ob_sierra_h" ){ padding = ( ( x + sprite_width ) - bbox_right );
        
    }
    else{ padding = ( ( y + sprite_height ) - bbox_bottom ); }
    
    

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Seteo de velocidad inicial

ini_vel = vel;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
