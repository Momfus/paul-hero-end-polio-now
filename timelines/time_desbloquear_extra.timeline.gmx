<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<timeline>
  <entry>
    <step>0</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Establecer atributos de animación y temblor

// Se guarda ID a usar (considerando si el time se llamo para desbloquear nivel extra o sector extra)

if( room == room_seleccion_niveles ){

    with( ob_bloque_nivel ){
    
        if( numero == 11 ){ control_general.bloque_extra_id = id; break; }
        
    }
    
    // Se crea el temblor necesario (considerar que el tiempo de duración es multiplicado por la repetición de la vibración del bloque - timeline pos 18 )
    temblor_pantalla( 2, 18 * 5);

}
else{

    with( ob_bloque_sector ){
    
        if( numero == 6 ){ control_general.bloque_extra_id = id; break; }
    
    }
    
    // Se crea el temblor necesario (considerar que el tiempo de duración es multiplicado por la repetición de la vibración del bloque - timeline pos 18 )
    temblor_pantalla( 3, 18 * 5 );

}

// Vuelve a su estado inicial.
repeticion_vibracion = 0;


// Se reproduce el sonido de temblor
musica_secundaria = audio_play_sound( sn_desbloquear_temblor, 10, true  );
audio_sound_gain( musica_secundaria, volumen_musica + 0.2, 0 );


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>10</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///[Bloque] Mover izquierda

with( bloque_extra_id ){ x -= 4; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>12</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// [Bloque] Mover al medio

with( bloque_extra_id ){ x = xstart; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>14</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// [Bloque] Mover derecha

with( bloque_extra_id ){ x += 4; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>16</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// [Bloque] Mover al medio

with( bloque_extra_id ){ x = xstart; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>18</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Compruebar limite repeticiones temblor + rayo

// Si no se ha repetido 5 veces el temblor, se vuelve al mismo...sino se sigue el timeline
if ( repeticion_vibracion &lt; 5 ){ 
    
    // Se hacen dos flashes rápidos en dos situaciones y sonido de trueno
    if( repeticion_vibracion == 2 or repeticion_vibracion == 4 ){ 
    
        var trueno = audio_play_sound( sn_jefe_trueno, 9, false );
        audio_sound_gain( trueno, volumen_musica + 0.4, 0 );
        
        efectos( 0, 2, c_white);     
        
    }
    
    // Se incrementa la cantidad de vibraciones hechas y se vuelve al inicio del mismo.
    repeticion_vibracion++;
    timeline_position = 10; 
           
}
else{

    // Se va bajando el sonido del temblor de fondo
    audio_sound_gain( musica_secundaria, 0, 230 );

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>22</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flash en pantalla lento

efectos( 0, 2, c_white); 

var trueno = audio_play_sound( sn_jefe_trueno, 9, false );
audio_sound_pitch( trueno, 0.8 );
audio_sound_gain( trueno, volumen_musica + 0.4, 0 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>25</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Se desbloquea nivel extra o sector extra / Se detiene la música

// Detener sonido de temblor.
audio_stop_sound( musica_secundaria );

// Se tiene en cuenta si se está desbloqueando un nivel extra o un sector extra.
if( room == room_seleccion_niveles ){ desbloquear_nivel( "save.data", sector_actual, 11 ); }
else{ 

    var nombre_save = "save.data"
    desbloquear_sector( nombre_save, 6 ); 
    desbloquear_nivel( nombre_save, 6, 1 );

            
}

// Sonido de romperse cadenas + se desbloque dicho nivel / sector extra
var rompe_cadena = audio_play_sound( sn_desbloquear_cadenas, 10, false );
audio_sound_gain( rompe_cadena, volumen_musica + 0.2, 0 );


with( bloque_extra_id ){
    
    desbloqueado = true;

    // Efecto al romperse
    var cantidad = 20 + irandom( 10 ),
        medio_bloque_x = x + sprite_get_width(sprite_index) / 2,
        medio_bloque_y = y + sprite_get_height( sprite_index ) / 2;
    
    repeat( cantidad ){ instance_create( medio_bloque_x, medio_bloque_y, ob_candado_roto ); }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>50</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sonido de risa

if( room == room_seleccion_sectores or sector_actual == 7 ){

    //Sonido de Risa.
    var risa = audio_play_sound( sn_jefe_risa, 8, false );
    audio_sound_pitch( risa, 1.2 );
    audio_sound_gain( risa, volumen_musica + 0.2, 0 );
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Volver a la normalidad

// Se indica que aún no puede usarse el menú y se llama a la alarma correspondiente que chequea cuando si.
with(control_menu_pausa){
            
    menu_on = false;
    alarm[0] = 10;
                
    // Se toma en cuenta si se esta desbloqueando un nivel o sector extra.
    if( room == room_seleccion_niveles ){
    
        // Se setean los valores iniciales para el manejo del menu y puntero.
        menu_submenu = 0;
        menu_opcion = 11; // Se posiciona sobre nivel extra
        menu_move = false;
                    
        opcion_siguiente_sector = other.sector_siguiente_desbloqueado; // Se le manda el mismo valor que indica si el siguiente sector esta habilitado.
                    
        /* Se coloca el puntero teniendo en cuenta el nivel en el que estaba  (en el caso de venir desde la selección de sectores, siempre se coloca 
        el puntero al lado del primer nivel).*/
        with( ob_bloque_nivel ){
            
            if( numero == 11){
                                                 
                other.x_puntero = xstart + 20 + sprite_get_width(sp_bloque_nivel);
                other.y_puntero = ystart + ( sprite_get_height(sp_bloque_nivel) / 2 );
                        
                nivel_actual = 11;
                apuntado = true;
                
                break;
                        
            }
                        
        }
       
    }
    else{
    
        // Se setean los valores iniciales para el manejo del menu y puntero.
        menu_submenu = 0;
        menu_opcion = 6; // Se posiciona sobre sector extra.
        sector_actual = 6
        menu_move = false;
                    
         /* Se coloca el puntero teniendo en cuenta el sector en el que estaba en el caso que venía el jugador desde la pantalla de selección de niveles (en el
         caso de venir desde el menú principal, siempre se coloca el puntero al lado del primer sector).*/
         with( ob_bloque_sector ){
         
            if( numero == 6){
                                                 
                other.x_puntero = xstart + 20 + sprite_get_width(sp_bloque_sector);
                other.y_puntero = ystart + ( sprite_get_height(sp_bloque_sector) / 2 );
                                
            }
                        
        }
    
    }         
            
}

// &lt;&lt; Se detiene el timeline &gt;&gt;
timeline_running = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
</timeline>
